$date
	Sun Dec 31 00:34:01 2023
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module TwoBitComparator_Test $end
$var reg 2 ! A [1:0] $end
$var reg 2 " B [1:0] $end
$var reg 1 # isEqual $end
$var reg 1 $ isGreater $end
$var reg 1 % isLess $end
$var wire 1 & equal $end
$var wire 1 ' A_greater $end
$var wire 1 ( A_less $end
$var reg 1 ) clk $end

$scope module uut $end
$var wire 1 * A [1] $end
$var wire 1 + A [0] $end
$var wire 1 , B [1] $end
$var wire 1 - B [0] $end
$var wire 1 . isEqual $end
$var wire 1 / isGreater $end
$var wire 1 0 isLess $end
$var wire 1 & equal $end
$var wire 1 ' A_greater $end
$var wire 1 ( A_less $end
$var wire 1 1 x $end
$var wire 1 2 y $end
$var wire 1 3 z $end
$var wire 1 4 w $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 !
b0 "
0#
1$
0%
0)
0&
1'
1(
01
02
13
04
00
1/
0.
0-
0,
1+
1*
$end
#5
1)
#10
b0 !
b11 "
0$
1%
0)
1-
1,
0+
0*
0/
10
03
0'
0(
#15
1)
#20
b1 !
b1 "
1#
0%
0)
0,
1+
1.
00
12
11
14
1&
1(
#25
1)
#30
b11 !
b10 "
1$
1%
0)
0-
1,
1*
1/
10
1'
01
13
04
0&
#35
1)
#40
b10 !
b11 "
0)
1-
0+
03
0'
0(
#45
1)
#50
b11 !
0$
0%
0)
1+
0/
00
11
14
1&
1(
#55
1)
